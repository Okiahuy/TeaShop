@{
    ViewBag.Title = "Product";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPage.cshtml";
}
@using PagedList;
@using PagedList.Mvc;
@using System.IO;
@model IPagedList<TeaShop.Models.ProductModel>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        .table td, .table th {
            vertical-align: middle;
            text-align: center;
        }

        .table img {
            display: block;
            margin: 0 auto;
            max-width: 100px;
            max-height: 100px;
        }

        .text-center {
            vertical-align: middle !important;
        }

        .search-box {
            width: 300px;
            display: flex;
            align-items: center;
            background-color: #f1f1f1;
            border-radius: 20px;
            padding: 5px 10px;
        }

            .search-box input {
                border: none;
                background: none;
                outline: none;
                padding: 5px 10px;
                width: 100%;
            }

            .search-box i {
                color: #999;
            }
    </style>
</head>
<body>

 
        <div class="row mb-3">
            <div class="col-md-4">
                <div class="search-box">
                    @using (Html.BeginForm("Product", "ProductAdmin", FormMethod.Get, new { @class = "form-inline" }))
                    {
                       
                        <input type="text" id="searchCategoryName" name="ProductName" placeholder="Search..." value="@ViewBag.CurrentFilter"/>
                        <button type="submit" style="border: none; background: none; ">
                            <i class="fas fa-search"></i>
                        </button>
                    }
                </div>
            </div>

            <div class="col-md-2">
               
            </div>
        </div>


        <table class="table text-center table-striped">
            <thead class="thead-dark">
                <tr>
                    <div class="col-md-2">
                        <button class="btn btn-success" data-toggle="modal" data-target="#createModal">Thêm sản phẩm</button>
                    </div>
                    </tr>
                <br />
                <tr>
                    <th>Mã Sản Phẩm</th>
                    <th>Tên Sản Phẩm</th>
                    <th>Tên Danh Mục</th>
                    <th>Giá</th>
                    <th>Tồn Kho</th>
                    <th>Mô Tả</th>
                    <th>Hình Minh Họa</th>
                    <th>Thao Tác</th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.Any())
                {
                    <tr>
                        <td colspan="8">No products found.</td>
                    </tr>
                }
                else
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.ProductID</td>
                            <td>@item.ProductName</td>
                            <td>@item.Category.CategoryName</td>
                            <td>@string.Format("{0:N0}đ", item.Price)</td>
                            <td>@item.Stock</td>
                            <td>@item.Description</td>
                            <td>
                                @{
                                    var imageUrl = item.ImageURL;
                                    var imagePath = Path.Combine(Server.MapPath("~/Images"), Path.GetFileName(imageUrl));
                                    var otherImagePath = Path.Combine(Server.MapPath("~/Images/Others"), Path.GetFileName(imageUrl));
                                    var relativeImagePath = "";

                                    if (File.Exists(imagePath))
                                    {
                                        relativeImagePath = Url.Content("~/Images/" + Path.GetFileName(imageUrl));
                                    }
                                    else if (File.Exists(otherImagePath))
                                    {
                                        relativeImagePath = Url.Content("~/Images/Others/" + Path.GetFileName(imageUrl));
                                    }
                                    else
                                    {
                                        relativeImagePath = Url.Content("~/Images/default.png"); // Default image if none is found
                                    }
                                }
                                <img src="@relativeImagePath" alt="Product Image" />
                            </td>
                            <td>
                                <button class="btn btn-warning" data-toggle="modal" data-target="#editModal_@item.ProductID" data-id="@item.ProductID">Sửa</button>
                                <button class="btn btn-danger" data-toggle="modal" data-target="#deleteModal_@item.ProductID">Xóa</button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <!-- Pagination Controls -->
        <div class="container mt-3">
            @if (Model.PageCount > 1)
            {
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-center">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Product", new { page = Model.PageNumber - 1, searchProductName = Request.QueryString["searchProductName"] })" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                    <span class="sr-only">Previous</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">&laquo;</span>
                            </li>
                        }

                        @for (int i = 1; i <= Model.PageCount; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Product", new { page = i, searchProductName = Request.QueryString["searchProductName"] })">@i</a>
                            </li>
                        }

                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Product", new { page = Model.PageNumber + 1, searchProductName = Request.QueryString["searchProductName"] })" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">&raquo;</span>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>
  


    <!-- Create Modal -->
    <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createModalLabel">Thêm mới sản phẩm</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Html.Partial("_CreateProductPartial")
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <!-- Edit Modal -->
    @foreach (var item in Model)
    {
        <div class="modal fade" id="editModal_@item.ProductID" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editModalLabel_@item.ProductID">Sửa</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    @using (Html.BeginForm("Edit", "ProductAdmin", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("ProductID", item.ProductID)
                        <div class="modal-body">
                            <input type="hidden" name="ProductID" value="@item.ProductID" />
                            <div class="form-group">
                                <label for="ProductName" class="control-label">Tên sản phẩm</label>
                                <input type="text" name="ProductName" class="form-control" value="@item.ProductName" required />
                            </div>
                            <div class="form-group">
                                <label for="CategoryID" class="control-label">Loại</label>
                                @Html.DropDownList("CategoryID", (SelectList)ViewBag.Categories, "Select Category", new { @class = "form-control", @value = item.CategoryID, @required = "required" })

                            </div>

                            <div class="form-group">
                                <label for="Price" class="control-label">Giá</label>
                                <input type="text" name="Price" class="form-control" value="@string.Format("{0:N0}", item.Price) đ" required />
                            </div>
                            <div class="form-group">
                                <label for="Stock" class="control-label">SL</label>
                                <input type="number" name="Stock" class="form-control" value="@item.Stock" required />
                            </div>
                            <div class="form-group">
                                <label for="Description" class="control-label">Mô tả</label>
                                <textarea name="Description" class="form-control" required>@item.Description</textarea>
                            </div>
                            <div class="form-group">
                                <label for="ImageFile" class="control-label">Hình ảnh</label>
                                <input type="file" name="ImageFile" class="form-control" />
                                @if (!string.IsNullOrEmpty(item.ImageURL))
                                {
                                    <div class="mt-2">
                                        <img src="@ViewBag.ImageURL" alt="Product Image" style="max-width:100px;max-height:100px;" />
                                        <p>Current Image</p>
                                    </div>
                                }

                            </div>

                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                            <button type="submit" class="btn btn-primary">Lưu</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    }


    @foreach (var item in Model)
    {
        <div class="modal fade" id="deleteModal_@item.ProductID" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel_@item.ProductID" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel_@item.ProductID">Xóa</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Bạn có chắc muốn xóa sản phẩm này: @item.ProductName?</p>
                    </div>
                    <div class="modal-footer">
                        @using (Html.BeginForm("Delete", "ProductAdmin", FormMethod.Post, new { id = item.ProductID }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("ProductID", item.ProductID)
                            <button type="submit" class="btn btn-danger">Xóa</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>


</body>
</html>